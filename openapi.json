{
  "openapi": "3.0.3",
  "info": {
    "title": "Store Orders API",
    "description": "API for managing store orders, products, categories, and authentication",
    "version": "1.0.0",
    "contact": {
      "name": "Store Orders API",
      "email": "support@storeorders.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080/api",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password", "role"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          },
          "role": {
            "type": "string",
            "enum": ["Store", "Admin"],
            "example": "Store"
          },
          "store_id": {
            "type": "string",
            "description": "Hashed store ID",
            "example": "abc123def456"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refresh_token"],
        "properties": {
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Hashed user ID",
            "example": "abc123def456"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "role": {
            "type": "string",
            "enum": ["Store", "Admin"],
            "example": "Store"
          },
          "store_id": {
            "type": "string",
            "description": "Hashed store ID",
            "example": "abc123def456"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "CategoryRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Hashed category ID",
            "example": "abc123def456"
          },
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Electronic devices and accessories"
          },
          "parent_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed parent category ID",
            "example": "abc123def456"
          },
          "sort_order": {
            "type": "integer",
            "example": 1
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          }
        }
      },
      "CreateCategoryRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Electronic devices and accessories"
          },
          "parent_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed parent category ID",
            "example": "abc123def456"
          },
          "sort_order": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Electronic devices and accessories"
          },
          "parent_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed parent category ID",
            "example": "abc123def456"
          },
          "sort_order": {
            "type": "integer",
            "example": 1
          },
          "is_active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ProductRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Hashed product ID",
            "example": "abc123def456"
          },
          "name": {
            "type": "string",
            "example": "iPhone 15"
          },
          "description": {
            "type": "string",
            "example": "Latest iPhone model with advanced features"
          },
          "sku": {
            "type": "string",
            "example": "IPHONE15-128GB"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 999.99
          },
          "category_id": {
            "type": "string",
            "description": "Hashed category ID",
            "example": "abc123def456"
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/images/iphone15.jpg"
          },
          "in_stock": {
            "type": "boolean",
            "example": true
          },
          "stock_quantity": {
            "type": "integer",
            "example": 50
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": ["name", "description", "sku", "price", "category_id", "stock_quantity"],
        "properties": {
          "name": {
            "type": "string",
            "example": "iPhone 15"
          },
          "description": {
            "type": "string",
            "example": "Latest iPhone model with advanced features"
          },
          "sku": {
            "type": "string",
            "example": "IPHONE15-128GB"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 999.99
          },
          "category_id": {
            "type": "string",
            "description": "Hashed category ID",
            "example": "abc123def456"
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/images/iphone15.jpg"
          },
          "stock_quantity": {
            "type": "integer",
            "example": 50
          }
        }
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "iPhone 15"
          },
          "description": {
            "type": "string",
            "example": "Latest iPhone model with advanced features"
          },
          "sku": {
            "type": "string",
            "example": "IPHONE15-128GB"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 999.99
          },
          "category_id": {
            "type": "string",
            "description": "Hashed category ID",
            "example": "abc123def456"
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/images/iphone15.jpg"
          },
          "in_stock": {
            "type": "boolean",
            "example": true
          },
          "stock_quantity": {
            "type": "integer",
            "example": 50
          },
          "is_active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "StoreOrderRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Hashed order ID",
            "example": "abc123def456"
          },
          "order_number": {
            "type": "string",
            "example": "ORD-2024-001"
          },
          "user_id": {
            "type": "string",
            "description": "Hashed user ID",
            "example": "abc123def456"
          },
          "store_id": {
            "type": "string",
            "description": "Hashed store ID",
            "example": "abc123def456"
          },
          "status": {
            "type": "string",
            "enum": ["Pending", "InProgress", "Completed", "Cancelled"],
            "example": "Pending"
          },
          "total_amount": {
            "type": "number",
            "format": "float",
            "example": 1999.98
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "Special delivery instructions"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          },
          "status_changed_to_pending": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-01-01T00:00:00"
          },
          "status_changed_to_completed": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-01-01T00:00:00"
          }
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": ["store_id", "items"],
        "properties": {
          "store_id": {
            "type": "string",
            "description": "Hashed store ID",
            "example": "abc123def456"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderItemRequest"
            }
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "Special delivery instructions"
          }
        }
      },
      "CreateOrderItemRequest": {
        "type": "object",
        "required": ["product_id", "quantity"],
        "properties": {
          "product_id": {
            "type": "string",
            "description": "Hashed product ID",
            "example": "abc123def456"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "example": 2
          }
        }
      },
      "AddToCartRequest": {
        "type": "object",
        "required": ["product_id", "quantity"],
        "properties": {
          "product_id": {
            "type": "string",
            "description": "Hashed product ID",
            "example": "abc123def456"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "example": 2
          }
        }
      },
      "UpdateOrderStatusRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["Pending", "InProgress", "Completed", "Cancelled"],
            "example": "InProgress"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "Order is being processed"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object"
          },
          "count": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Invalid credentials"
          }
        }
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate a user and return JWT tokens",
        "operationId": "login",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User registration",
        "description": "Register a new user account",
        "operationId": "register",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh JWT token",
        "description": "Refresh access token using refresh token",
        "operationId": "refreshToken",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "description": "Retrieve all categories, optionally filtered by parent_id",
        "operationId": "getCategories",
        "security": [],
        "parameters": [
          {
            "name": "parent_id",
            "in": "query",
            "description": "Hashed parent category ID to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CategoryRecord"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category",
        "description": "Create a new product category",
        "operationId": "createCategory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by ID",
        "description": "Retrieve a specific category by its hashed ID",
        "operationId": "getCategory",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hashed category ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update category",
        "description": "Update an existing category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hashed category ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "Retrieve all products with optional filtering",
        "operationId": "getProducts",
        "security": [],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "Hashed category ID to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in_stock",
            "in": "query",
            "description": "Filter by stock availability",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "Filter by active status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductRecord"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Create a new product",
        "operationId": "createProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "description": "Retrieve a specific product by its hashed ID",
        "operationId": "getProduct",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hashed product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product",
        "description": "Update an existing product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hashed product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get user orders",
        "description": "Retrieve orders for the authenticated user",
        "operationId": "getOrders",
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StoreOrderRecord"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "description": "Create a new order with items",
        "operationId": "createOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StoreOrderRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/store/{store_id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get store orders",
        "description": "Retrieve orders for a specific store (store owners only)",
        "operationId": "getStoreOrders",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "Hashed store ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StoreOrderRecord"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "description": "Retrieve a specific order by its hashed ID",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hashed order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StoreOrderRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/status": {
      "put": {
        "tags": ["Orders"],
        "summary": "Update order status",
        "description": "Update the status of an existing order",
        "operationId": "updateOrderStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hashed order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StoreOrderRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/cart/add": {
      "post": {
        "tags": ["Orders"],
        "summary": "Add item to cart",
        "description": "Add a product to the user's shopping cart",
        "operationId": "addToCart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Categories",
      "description": "Product category management"
    },
    {
      "name": "Products",
      "description": "Product management"
    },
    {
      "name": "Orders",
      "description": "Order and cart management"
    }
  ]
}

